"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[3697],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),g=o,y=p["".concat(s,".").concat(g)]||p[g]||d[g]||a;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},46222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={id:"agent",title:"Configuring the Tracetest Agent",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1689693872/docs/Blog_Thumbnail_28_ugy2yy.png"},i=void 0,c={unversionedId:"configuration/agent",id:"configuration/agent",title:"Configuring the Tracetest Agent",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",source:"@site/docs/configuration/agent.mdx",sourceDirName:"configuration",slug:"/configuration/agent",permalink:"/configuration/agent",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/configuration/agent.mdx",tags:[],version:"current",frontMatter:{id:"agent",title:"Configuring the Tracetest Agent",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1689693872/docs/Blog_Thumbnail_28_ugy2yy.png"},sidebar:"tutorialSidebar",previous:{title:"OpenTelemetry Collector Configuration File Reference",permalink:"/configuration/opentelemetry-collector-configuration-file-reference"},next:{title:"Tracetest Analyzer Settings",permalink:"/configuration/tracetest-analyzer"}},s={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Tracetest Agent is a lightweight, dependency-free, agent that runs locally in your development environment, or as a Docker container in your Cloud Native infrastructure."),(0,o.kt)("p",null,"Once started, Tracetest Agent exposes OTLP ports ",(0,o.kt)("inlineCode",{parentName:"p"},"4317")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"4318")," to ingest traces via gRCP and HTTP. Tracetest Agent connects to Tracetest via an API Key. "),(0,o.kt)("p",null,"Unlike with Tracetest Core, you are not required to run a dedicated Tracetest Server. Running Tracetest Agent and using Tracetest as the remote server requires no configuration or infrastructure management."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/getting-started/installation"},"Start Tracetest Agent")," in your environment to get started."),(0,o.kt)("p",null,"Or, ",(0,o.kt)("a",{parentName:"p",href:"https://app.tracetest.io/"},"sign in to Tracetest")," and follow the instructions on the Agent Settings page."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1696941536/docs/app.tracetest.io_organizations_ttorg_e66318ba6544b856_environments_ttenv_0e807879e2e38d28_settings_j4zt1b.png",alt:null})))}d.isMDXComponent=!0}}]);