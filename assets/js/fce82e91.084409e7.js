"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[1620],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,g=d["".concat(i,".").concat(m)]||d[m]||u[m]||s;return a?n.createElement(g,o(o({ref:t},c),{},{components:a})):n.createElement(g,o({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<s;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},47365:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const s={id:"open",title:"Opening Tracetest",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces. Learn how to get started with creating tests once you open Tracetest.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1689693872/docs/Blog_Thumbnail_28_ugy2yy.png"},o=void 0,l={unversionedId:"getting-started/open",id:"getting-started/open",title:"Opening Tracetest",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces. Learn how to get started with creating tests once you open Tracetest.",source:"@site/docs/getting-started/open.mdx",sourceDirName:"getting-started",slug:"/getting-started/open",permalink:"/getting-started/open",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/getting-started/open.mdx",tags:[],version:"current",frontMatter:{id:"open",title:"Opening Tracetest",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces. Learn how to get started with creating tests once you open Tracetest.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1689693872/docs/Blog_Thumbnail_28_ugy2yy.png"},sidebar:"tutorialSidebar",previous:{title:"Installing Tracetest",permalink:"/getting-started/installation"},next:{title:"What if I don't have OpenTelemetry installed?",permalink:"/getting-started/no-otel"}},i={},p=[{value:"Start the Sample Pokeshop API",id:"start-the-sample-pokeshop-api",level:2},{value:"Configure the Pokeshop API Demo resource",id:"configure-the-pokeshop-api-demo-resource",level:3},{value:"Creating Trace-based Tests",id:"creating-trace-based-tests",level:2},{value:"Creating Trace-based Tests Visually",id:"creating-trace-based-tests-visually",level:2},{value:"Create",id:"create",level:3},{value:"Trigger",id:"trigger",level:3},{value:"Trace",id:"trace",level:3},{value:"Test",id:"test",level:3},{value:"Automate",id:"automate",level:3},{value:"Creating Trace-based Tests Programatically",id:"creating-trace-based-tests-programatically",level:2},{value:"Create",id:"create-1",level:3},{value:"Trigger",id:"trigger-1",level:3},{value:"Output",id:"output",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This page showcases opening the Tracetest Web UI and creating a test against the ",(0,r.kt)("a",{parentName:"p",href:"/live-examples/pokeshop/overview"},"sample Pokeshop API"),"."),(0,r.kt)("p",null,"Once you've installed Tracetest, as explained in the ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/installation"},"installation guide"),", the Tracetest Agent is running on ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost")," ports ",(0,r.kt)("inlineCode",{parentName:"p"},"4317")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"4318"),". You then access the Tracetest Web UI on ",(0,r.kt)("a",{parentName:"p",href:"https://app.tracetest.io"},(0,r.kt)("inlineCode",{parentName:"a"},"app.tracetest.io")),". Here's what will greet you after a fresh install."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688474565/docs/screely-1688474539641_kbhvvc.png",alt:"Landing page Tracetest"})),(0,r.kt)("h2",{id:"start-the-sample-pokeshop-api"},"Start the Sample Pokeshop API"),(0,r.kt)("p",null,"To create tests quickly, start the official sample called Pokeshop API."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=Terminal",title:"Terminal"},"git clone --depth 1 https://github.com/kubeshop/tracetest.git\ncd tracetest/examples/tracetest-agent/pokeshop/\ndocker-compose up\n")),(0,r.kt)("p",null,"This will start an HTTP API on ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:8081")," and a GRPC API on ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:8082"),"."),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Click to view the sample Pokeshop API architecture")),(0,r.kt)("p",null,"Here's the Architecture of the Pokeshop Sample App:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"an ",(0,r.kt)("strong",{parentName:"li"},"API")," that serves client requests,"),(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("strong",{parentName:"li"},"Worker")," who deals with background processes.")),(0,r.kt)("p",null,"The communication between the API and Worker is made using a ",(0,r.kt)("inlineCode",{parentName:"p"},"RabbitMQ")," queue, and both services emit telemetry data to OpenTelemetry Collector and communicate with a Postgres database."),(0,r.kt)("p",null,"Tracetest triggers tests against the Node.js API."),(0,r.kt)("mermaid",{value:"flowchart TD\n    A[(Redis)]\n    B[(Postgres)]\n    C(Node.js API)\n    D(RabbitMQ)\n    E(Worker)\n    F(OpenTelemetry Collector)\n    G(Tracetest)\n\n    G --\x3e C\n    F --\x3e G\n    C --\x3e A\n    C --\x3e B\n    C --\x3e D\n    D --\x3e E\n    E --\x3e B\n    C --\x3e F\n    E --\x3e F\n    \n    "})),(0,r.kt)("h3",{id:"configure-the-pokeshop-api-demo-resource"},"Configure the Pokeshop API Demo resource"),(0,r.kt)("p",null,"Configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"demo")," ",(0,r.kt)("a",{parentName:"p",href:"/configuration/provisioning"},"resource")," to quickly create tests either in the Web UI or with the CLI."),(0,r.kt)("p",null,"In the Web UI go to ",(0,r.kt)("strong",{parentName:"p"},"Settings > Demo"),", toggle ",(0,r.kt)("strong",{parentName:"p"},"Enable Pokeshop"),", and add:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"HTTP Endpoint: ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:8081")),(0,r.kt)("li",{parentName:"ul"},"GRPC Endpoint: ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost:8082"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1696251763/docs/screely-1696251756346_ptxb9m.png",alt:"Settings"})),(0,r.kt)("p",null,"With the CLI, create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest-provision.yaml"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=tracetest-provision.yaml",title:"tracetest-provision.yaml"},"---\ntype: Demo\nspec:\n  type: pokeshop\n  enabled: true\n  name: pokeshop\n  pokeshop:\n    httpEndpoint: http://localhost:8081\n    grpcEndpoint: localhost:8082\n")),(0,r.kt)("p",null,"Run the command below to enable the ",(0,r.kt)("inlineCode",{parentName:"p"},"demo")," resource."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tracetest apply demo -f tracetest-provision.yaml\n")),(0,r.kt)("p",null,"You can now quickly create tests against the Pokeshop API."),(0,r.kt)("h2",{id:"creating-trace-based-tests"},"Creating Trace-based Tests"),(0,r.kt)("p",null,"You can create tests in two ways:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Visually, in the Web UI"),(0,r.kt)("li",{parentName:"ul"},"Programmatically, in YAML")),(0,r.kt)("h2",{id:"creating-trace-based-tests-visually"},"Creating Trace-based Tests Visually"),(0,r.kt)("p",null,"This guide will show how to create end-to-end and integration tests in less than 5 minutes via the Web UI."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"To view the in-depth guide on creating tests visually, ",(0,r.kt)("a",{parentName:"p",href:"/web-ui/creating-tests"},"check out this docs page"),".")),(0,r.kt)("h3",{id:"create"},"Create"),(0,r.kt)("p",null,"On the top right, click the ",(0,r.kt)("strong",{parentName:"p"},"Create")," button and select ",(0,r.kt)("strong",{parentName:"p"},"Create New Test")," in the drop down."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688475179/docs/screely-1688475174365_ckq3cn.png",alt:"Create a new test"})),(0,r.kt)("p",null,"Select an ",(0,r.kt)("strong",{parentName:"p"},"HTTP Request")," as the ",(0,r.kt)("strong",{parentName:"p"},"test trigger"),", and choose the ",(0,r.kt)("strong",{parentName:"p"},"Pokeshop - Import")," example."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688475514/docs/screely-1688475510090_r6hqmx.png",alt:"Select Pokeshop example"})),(0,r.kt)("p",null,"This will populate a sample API test against a POST endpoint in the Pokeshop app demo. Clicking ",(0,r.kt)("strong",{parentName:"p"},"Create & Run")," will save and trigger the test."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1696253160/docs/screely-1696253153066_khjz8y.png",alt:"API test against POST endpoint"})),(0,r.kt)("h3",{id:"trigger"},"Trigger"),(0,r.kt)("p",null,"You'll be redirected to the test page where you can see four tabs and depending on which one you select you'll get access to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test trigger and results."),(0,r.kt)("li",{parentName:"ul"},"The entire distributed trace and trace analysis."),(0,r.kt)("li",{parentName:"ul"},"Test specification and assertions."),(0,r.kt)("li",{parentName:"ul"},"How to automate the test.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"To view the in-depth guide on test results, ",(0,r.kt)("a",{parentName:"p",href:"/web-ui/test-results"},"check out this docs page"),".")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Trigger")," tab shows how the test was triggered and what the API response was."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1696253230/docs/screely-1696253224366_f62411.png",alt:"test result"})),(0,r.kt)("h3",{id:"trace"},"Trace"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Trace")," tab shows the entire distributed trace for debugging and a trace analysis score."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688476460/docs/screely-1688476455986_q24aa2.png",alt:"distributed trace and trace analysis score"})),(0,r.kt)("h3",{id:"test"},"Test"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Test")," tab shows span attributes. Here you add test specs and assertions on attribute values. You also get a test snippets out-of-the-box for common test cases."),(0,r.kt)("p",null,"In the sample below, you see how to assert that all database spans return in less than ",(0,r.kt)("inlineCode",{parentName:"p"},"100ms"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688476657/docs/screely-1688476653521_omxe4r.png",alt:"test specs"})),(0,r.kt)("h3",{id:"automate"},"Automate"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Automate")," tab shows how to automate the test run with the Tracetest CLI and other automation options."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1696285049/docs/screely-1696285040458_vjt0qv.png",alt:"automate"})),(0,r.kt)("p",null,"From here you can download a YAML file test definition and run it with the CLI."),(0,r.kt)("h2",{id:"creating-trace-based-tests-programatically"},"Creating Trace-based Tests Programatically"),(0,r.kt)("p",null,"The test definition will contain:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"Trigger")," for the test in the ",(0,r.kt)("inlineCode",{parentName:"li"},"trigger")," section."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"Test Specifications")," in the",(0,r.kt)("inlineCode",{parentName:"li"},"specs")," section.")),(0,r.kt)("p",null,"You can either download the YAML file test definition, or write one from scratch."),(0,r.kt)("h3",{id:"create-1"},"Create"),(0,r.kt)("p",null,"Using the sample from above, create the Trace-based Test programatically."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="pokeshop-import.yaml"',title:'"pokeshop-import.yaml"'},'type: Test\nspec:\n  id: T7-delWIR\n  name: Pokemon Import\n  trigger:\n    type: http\n    httpRequest:\n      method: POST\n      url: http://localhost:8081/pokemon/import\n      body: "{\\"id\\":52}"\n      headers:\n      - key: Content-Type\n        value: application/json\n  specs:\n  - selector: span[tracetest.span.type="database"]\n    name: "All Database Spans: Processing time is less than 100ms"\n    assertions:\n    - attr:tracetest.span.duration  <  100ms\n    - attr:db.system != ""\n  - selector: span[tracetest.span.type="http"]\n    name: "All HTTP Spans: Status code is 200"\n    assertions:\n    - attr:http.status_code = 200\n')),(0,r.kt)("h3",{id:"trigger-1"},"Trigger"),(0,r.kt)("p",null,"Using the CLI, trigger a test run."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Terminal"',title:'"Terminal"'},"tracetest run test -f pokemon-import.yaml --required-gates test-specs --output pretty\n")),(0,r.kt)("h3",{id:"output"},"Output"),(0,r.kt)("p",null,"The test run will complete and show a result."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Output"',title:'"Output"'},"\u2714 Pokemon Import (https://app.tracetest.io/organizations/<org_id>/environments/<env_id>/test/T7-delWIR/run/7/test) - trace id: <trace_id>\n    \u2714 All Database Spans: Processing time is less than 100ms\n    \u2714 All HTTP Spans: Status code is 200\n")),(0,r.kt)("p",null,"The provided link in the test output will open the test run in the Tracetest Web UI."))}u.isMDXComponent=!0}}]);