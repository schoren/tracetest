"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[3238],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},79343:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},o="Running Tracetest with Keptn",s={unversionedId:"tools-and-integrations/keptn",id:"tools-and-integrations/keptn",title:"Running Tracetest with Keptn",description:"Tracetest is a testing tool based on OpenTelemetry that permits you to test your distributed application. It allows you to use your trace data generated on your OpenTelemetry tools to check and assert if your application has the desired behavior defined by your test definitions.",source:"@site/docs/tools-and-integrations/keptn.md",sourceDirName:"tools-and-integrations",slug:"/tools-and-integrations/keptn",permalink:"/tools-and-integrations/keptn",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/tools-and-integrations/keptn.md",tags:[],version:"current",frontMatter:{},sidebar:"examplesTutorialsSidebar",previous:{title:"Tools and Integrations",permalink:"/tools-and-integrations/overview"},next:{title:"Running Tracetest with K6",permalink:"/tools-and-integrations/k6"}},l={},p=[{value:"Quickstart",id:"quickstart",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"1. Setup a project and a service.",id:"1-setup-a-project-and-a-service",level:3},{value:"2. Add Tracetest files and job files as resources of a service.",id:"2-add-tracetest-files-and-job-files-as-resources-of-a-service",level:3},{value:"3. Setup a Job Executor Service to see events emitted by the test step.",id:"3-setup-a-job-executor-service-to-see-events-emitted-by-the-test-step",level:3},{value:"4. Run sequence when needed.",id:"4-run-sequence-when-needed",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"running-tracetest-with-keptn"},"Running Tracetest with Keptn"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://tracetest.io/"},"Tracetest")," is a testing tool based on OpenTelemetry that permits you to test your distributed application. It allows you to use your trace data generated on your OpenTelemetry tools to check and assert if your application has the desired behavior defined by your test definitions."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://keptn.sh/"},"Keptn")," is a powerful tool to automate the lifecycle of your application running on Kubernetes. One of the tasks that we can do with ",(0,r.kt)("inlineCode",{parentName:"p"},"keptn")," is to test an application and see if it is healthy and ready to be used by your users."),(0,r.kt)("p",null,"By using the Keptn ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/keptn-contrib/job-executor-service"},"Job Executor Service")," plugin, we can upload a Tracetest test definition and a CLI configuration to a service and run a test using the following job:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v2\nactions:\n- name: "Run tracetest on your service"\n  events:\n    - name: "sh.keptn.event.test.triggered"\n  tasks:\n    - name: "Run tracetest"\n      files:\n        - data/test-definition.yaml\n        - data/tracetest-cli-config.yaml\n      image: "kubeshop/tracetest:latest"\n      cmd:\n        - tracetest\n      args:\n        - --config\n        - /keptn/data/tracetest-cli-config.yaml\n        - test\n        - run\n        - --file\n        - /keptn/data/test-definition.yaml\n\n')),(0,r.kt)("h2",{id:"quickstart"},"Quickstart"),(0,r.kt)("p",null,"In this guide, we will show how to use Tracetest to run these tests and help in your delivery and testing workflows using the Pokeshop example, available on http://localhost:8081 if you are using docker compose or on ",(0,r.kt)("a",{parentName:"p",href:"http://demo-pokemon-api.demo/"},"http://demo-pokemon-api.demo/")," if you installed it on Kubernetes and are using Tracetest on the same cluster."),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"In your Kubernetes cluster you should have:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Keptn 1.0.x")," ",(0,r.kt)("a",{parentName:"li",href:"https://keptn.sh/docs/1.0.x/install/"},"installed"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Job Executor Service 0.3.x")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/keptn-contrib/job-executor-service/blob/main/docs/INSTALL.md"},"installed"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Tracetest")," server ",(0,r.kt)("a",{parentName:"li",href:"https://docs.tracetest.io/deployment/kubernetes"},"installed")," on the ",(0,r.kt)("inlineCode",{parentName:"li"},"tracetest")," namespace. ")),(0,r.kt)("p",null,"On your machine you should have:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Keptn CLI")," ",(0,r.kt)("a",{parentName:"li",href:"https://keptn.sh/docs/1.0.x/install/cli-install/"},"installed")),(0,r.kt)("li",{parentName:"ol"},"and already ",(0,r.kt)("a",{parentName:"li",href:"https://keptn.sh/docs/1.0.x/install/authenticate-cli-bridge/"},"authenticated")," with Keptn API.")),(0,r.kt)("p",null,"With everything set up, we will start configuring Keptn and Tracetest."),(0,r.kt)("h3",{id:"1-setup-a-project-and-a-service"},"1. Setup a project and a service."),(0,r.kt)("p",null,"Keptn works with ",(0,r.kt)("a",{parentName:"p",href:"https://keptn.sh/docs/concepts/glossary/"},"concepts")," of a Project (element to maintain multiple services forming an application in stages) and a Service (smallest deployable unit and is deployed in all project stages according to the order)."),(0,r.kt)("p",null,"Usually, these resources are managed by Keptn during Sequences (a set of tasks for realizing a delivery or operations process). In this example, we will create a sequence and run a Tracetest test in a system, once the sequence is triggered."),(0,r.kt)("p",null,"To do that, we will do the following steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a skeletal ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/tracetest/tree/main/examples/keptn-integration/shipyard.yaml"},(0,r.kt)("inlineCode",{parentName:"a"},"shipyard.yaml"))," file with the following content:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: "spec.keptn.sh/0.2.2"\nkind: "Shipyard"\nmetadata:\n name: "shipyard-keptn-tracetest-integration"\nspec:\n stages:\n   - name: "production"\n     sequences:\n       - name: "validate-pokeshop"\n         tasks:\n           - name: "test"\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create a new ",(0,r.kt)("inlineCode",{parentName:"li"},"keptn-tracetest-integration")," project using that ",(0,r.kt)("inlineCode",{parentName:"li"},"shipyard")," file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"keptn create project keptn-tracetest-integration -y -s shipyard.yaml\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," Keptn may ask you to have a Git repository for this project to enable GitOps. If so, you need to create an empty Git repository and a Git token and pass it through the flags ",(0,r.kt)("inlineCode",{parentName:"p"},"--git-remote-url"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"--git-user"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"--git-token"),". More details about this setup can be seen on ",(0,r.kt)("a",{parentName:"p",href:"https://keptn.sh/docs/1.0.x/manage/git_upstream"},"Keptn docs/Git-based upstream"),"."),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"pokeshop")," service:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"keptn create service pokeshop --project keptn-tracetest-integration -y\n")),(0,r.kt)("h3",{id:"2-add-tracetest-files-and-job-files-as-resources-of-a-service"},"2. Add Tracetest files and job files as resources of a service."),(0,r.kt)("p",null,"Now, we will set up a job associated with the ",(0,r.kt)("inlineCode",{parentName:"p"},"pokeshop")," service, listening to the task event ",(0,r.kt)("inlineCode",{parentName:"p"},"test-services"),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/tracetest/tree/main/examples/keptn-integration/tracetest-cli-config.yaml"},(0,r.kt)("inlineCode",{parentName:"a"},"tracetest-cli-config.yaml"))," configuration file for the Tracetest CLI in your current directory, identifying the Tracetest instance that should run the tests:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"scheme: http\nendpoint: tracetest.tracetest.svc.cluster.local:11633\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/tracetest/tree/main/examples/keptn-integration/test-definition.yaml"},(0,r.kt)("inlineCode",{parentName:"a"},"test-definition.yaml"))," Tracetest test definition in your current directory:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"type: Test\nspec:\n  id: apdCx-h4g\n  name: Pokeshop - List Pokemons\n  description: Get a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      url: http://demo-pokemon-api.demo/pokemon?take=20&skip=0\n      method: GET\n      headers:\n      - key: Content-Type\n        value: application/json\n  specs:\n  - selector: span[name = \u201cTracetest trigger\u201d]\n    assertions:\n    - attr:tracetest.span.duration < 500ms\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Add these files as resources for the ",(0,r.kt)("inlineCode",{parentName:"li"},"pokeshop")," service:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"keptn add-resource --project keptn-tracetest-integration --service pokeshop --stage production --resource test-definition.yaml --resourceUri data/test-definition.yaml\nkeptn add-resource --project keptn-tracetest-integration --service pokeshop --stage production --resource tracetest-cli-config.yaml --resourceUri data/tracetest-cli-config.yaml\n")),(0,r.kt)("p",null,"These files will be located in the folder ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," and will be injected into our Keptn job that we will set up in the next step."),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Create ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/tracetest/tree/main/examples/keptn-integration/job-config.yaml"},(0,r.kt)("inlineCode",{parentName:"a"},"job-config.yaml")),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v2\nactions:\n- name: "Run tracetest on your service"\n  events:\n    - name: "sh.keptn.event.test.triggered"\n  tasks:\n    - name: "Run tracetest"\n      files:\n        - data/test-definition.yaml\n        - data/tracetest-cli-config.yaml\n      image: "kubeshop/tracetest:latest"\n      cmd:\n        - tracetest\n      args:\n        - --config\n        - /keptn/data/tracetest-cli-config.yaml\n        - test\n        - run\n        - --file\n        - /keptn/data/test-definition.yaml\n')),(0,r.kt)("p",null,"This job will run Tracetest every time a ",(0,r.kt)("inlineCode",{parentName:"p"},"test")," event happens, listening to the event ",(0,r.kt)("inlineCode",{parentName:"p"},"sh.keptn.event.test.triggered")," (event emitted by the ",(0,r.kt)("inlineCode",{parentName:"p"},"test")," task on the ",(0,r.kt)("inlineCode",{parentName:"p"},"validate-pokeshop")," sequence)."),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Add this job as a resource on Keptn:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"keptn add-resource --project keptn-tracetest-integration --service pokeshop --stage production --resource job-config.yaml --resourceUri job/config.yaml\n")),(0,r.kt)("h3",{id:"3-setup-a-job-executor-service-to-see-events-emitted-by-the-test-step"},"3. Setup a Job Executor Service to see events emitted by the test step."),(0,r.kt)("p",null,"To guarantee that our job will be called by Keptn when we execute the ",(0,r.kt)("inlineCode",{parentName:"p"},"deployment")," sequence, we need to configure the integration ",(0,r.kt)("inlineCode",{parentName:"p"},"Job Executor Service")," on ",(0,r.kt)("inlineCode",{parentName:"p"},"keptn-tracetest-integration")," project to listen to ",(0,r.kt)("inlineCode",{parentName:"p"},"sh.keptn.event.test.triggered")," events if it is not configured. We can do that only through the Keptn Bridge (their Web UI), by going to our project, choosing the ",(0,r.kt)("inlineCode",{parentName:"p"},"Settings")," option, and later ",(0,r.kt)("inlineCode",{parentName:"p"},"Integrations"),"."),(0,r.kt)("p",null,"Choose the ",(0,r.kt)("inlineCode",{parentName:"p"},"job-executor-service")," integration, and add a subscription to the event ",(0,r.kt)("inlineCode",{parentName:"p"},"sh.keptn.event.test.triggered")," and the project ",(0,r.kt)("inlineCode",{parentName:"p"},"keptn-tracetest-integration"),"."),(0,r.kt)("h3",{id:"4-run-sequence-when-needed"},"4. Run sequence when needed."),(0,r.kt)("p",null,"Finally, to see the integration running, we only need to execute the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"keptn trigger sequence test-sequence --project keptn-tracetest-integration --service pokeshop --stage production\n")),(0,r.kt)("p",null,"Now you should be able to see the sequence running for ",(0,r.kt)("inlineCode",{parentName:"p"},"keptn-tracetest-integration")," project on Keptn Bridge."))}u.isMDXComponent=!0}}]);