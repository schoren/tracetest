"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[2798],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},13954:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={},l="Running Tracetest with Elastic APM",o={unversionedId:"examples-tutorials/recipes/running-tracetest-with-elasticapm",id:"examples-tutorials/recipes/running-tracetest-with-elasticapm",title:"Running Tracetest with Elastic APM",description:"Check out the source code on GitHub here.",source:"@site/docs/examples-tutorials/recipes/running-tracetest-with-elasticapm.md",sourceDirName:"examples-tutorials/recipes",slug:"/examples-tutorials/recipes/running-tracetest-with-elasticapm",permalink:"/examples-tutorials/recipes/running-tracetest-with-elasticapm",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/examples-tutorials/recipes/running-tracetest-with-elasticapm.md",tags:[],version:"current",frontMatter:{},sidebar:"examplesTutorialsSidebar",previous:{title:"Running Tracetest With New Relic",permalink:"/examples-tutorials/recipes/running-tracetest-with-new-relic"},next:{title:"Running Tracetest With Datadog",permalink:"/examples-tutorials/recipes/running-tracetest-with-datadog"}},s={},p=[{value:"Sample Node.js App with Elastic, OpenTelemetry and Tracetest",id:"sample-nodejs-app-with-elastic-opentelemetry-and-tracetest",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"1. Node.js App",id:"1-nodejs-app",level:3},{value:"2. Tracetest",id:"2-tracetest",level:3},{value:"Docker Compose Network",id:"docker-compose-network",level:3},{value:"Node.js App",id:"nodejs-app",level:2},{value:"Tracetest",id:"tracetest",level:2},{value:"Steps to Start the Environment",id:"steps-to-start-the-environment",level:2},{value:"Connecting Tracetest to Elastic APM",id:"connecting-tracetest-to-elastic-apm",level:2},{value:"Step-by-step Guide",id:"step-by-step-guide",level:3},{value:"Open Kibana",id:"open-kibana",level:2},{value:"Steps to Stop the Environment",id:"steps-to-stop-the-environment",level:2},{value:"Learn More",id:"learn-more",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"running-tracetest-with-elastic-apm"},"Running Tracetest with Elastic APM"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples/tracetest-elasticapm-with-elastic-agent"},"Check out the source code on GitHub here."))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://tracetest.io/"},"Tracetest")," is a testing tool based on ",(0,r.kt)("a",{parentName:"p",href:"https://opentelemetry.io/"},"OpenTelemetry")," that allows you to test your distributed application. It allows you to use data from distributed traces generated by OpenTelemetry to validate and assert if your application has the desired behavior defined by your test definitions."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.elastic.co/"},"Elastic")," is a search, observability, and security platform. The company is famous for developing the ELK stack - ElasticSearch, Kibana, Beats and Logstash that is used by thousands of developers. Elastic offers a cloud platform, Elastic Cloud, as its commercial offering to enable observability across logs, application performance monitoring (APM), and infrastructure monitoring, real user monitoring (RUM) and synthetic monitoring."),(0,r.kt)("h2",{id:"sample-nodejs-app-with-elastic-opentelemetry-and-tracetest"},"Sample Node.js App with Elastic, OpenTelemetry and Tracetest"),(0,r.kt)("p",null,"This is a simple quick start on how to configure a Node.js app to use Elastic APM Agent with traces and Tracetest for enhancing your E2E and integration tests with trace-based testing. The infrastructure will use Elastic APM and Elasticsearch as the trace data store and OpenTelemetry Collector to receive traces from the Node.js app and send them to Elastic APM."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"You will need ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"Docker")," and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"Docker Compose")," installed on your machine to run this quick start app!"),(0,r.kt)("h2",{id:"project-structure"},"Project Structure"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose.yml")," - Docker Compose file that starts the whole environment.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Elastic stack single node cluster with Elasticsearch, Kibana and, the APM Server."),(0,r.kt)("li",{parentName:"ul"},"OTel collector to support Tracetest."),(0,r.kt)("li",{parentName:"ul"},"Tracetest instance."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"collector-config.yml")," - The OTel collector configuration file."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"app.js")," - Sample NodeJS application listening on port 8080 and instrumented with Elastic Nodejs APM agent.")),(0,r.kt)("p",null,"The project is built with Docker Compose."),(0,r.kt)("h3",{id:"1-nodejs-app"},"1. Node.js App"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," contains a service called ",(0,r.kt)("inlineCode",{parentName:"p"},"app")," for the Node.js app."),(0,r.kt)("h3",{id:"2-tracetest"},"2. Tracetest"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file, ",(0,r.kt)("inlineCode",{parentName:"p"},"collector.config.yaml"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest-provision.yaml"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest-config.yaml")," contain configs for setting up Tracetest, Elastic APM, Elasticsearch, Kibana and the OpenTelemetry Collector."),(0,r.kt)("h3",{id:"docker-compose-network"},"Docker Compose Network"),(0,r.kt)("p",null,"All ",(0,r.kt)("inlineCode",{parentName:"p"},"services")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," are on the same network and will be reachable by hostname from within other services. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"apm-server:8200")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"elastic-apm-agent.js")," will map to the ",(0,r.kt)("inlineCode",{parentName:"p"},"apm-server")," service, where the port ",(0,r.kt)("inlineCode",{parentName:"p"},"8200")," is the port where the Elastic APM accepts traces. And, ",(0,r.kt)("inlineCode",{parentName:"p"},"https://es01:9200")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest-provision.yaml")," will map to the ",(0,r.kt)("inlineCode",{parentName:"p"},"es01")," service and port ",(0,r.kt)("inlineCode",{parentName:"p"},"9200")," where Tracetest will fetch trace data from Elasticsearch."),(0,r.kt)("h2",{id:"nodejs-app"},"Node.js App"),(0,r.kt)("p",null,"The Node.js app is a simple Express app, contained in the ",(0,r.kt)("inlineCode",{parentName:"p"},"app.js")," file."),(0,r.kt)("p",null,"The Elastic APM tracing is contained in the ",(0,r.kt)("inlineCode",{parentName:"p"},"elastic-apm-agent.js")," file. Traces will be sent to the OpenTelemetry Collector."),(0,r.kt)("p",null,"Here's the content of the ",(0,r.kt)("inlineCode",{parentName:"p"},"elastic-apm-agent.js")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const apm = require("elastic-apm-node").start({\n  serviceName: "sample-app",\n  serverUrl: "http://apm-server:8200",\n});\n')),(0,r.kt)("p",null,"Traces will be sent to the Elastic APM endpoint."),(0,r.kt)("p",null,"The hostname and port is:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"HTTP: ",(0,r.kt)("inlineCode",{parentName:"li"},"http://apm-server:8200"))),(0,r.kt)("p",null,"Enabling the tracer is done by preloading the trace file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"node -r ./elastic-apm-agent.js app.js\n")),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," you will see two npm scripts for running the respective tracers alongside the ",(0,r.kt)("inlineCode",{parentName:"p"},"app.js"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n  "with-elastic-apm-tracer":"node -r ./elastic-apm-agent.js app.js"\n},\n')),(0,r.kt)("p",null,"To start the server, run this command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run with-elastic-apm-tracer\n")),(0,r.kt)("p",null,"As you can see the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," uses the command above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'FROM node:slim\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 8080\nCMD [ "npm", "run", "with-elastic-apm-tracer" ]\n')),(0,r.kt)("p",null,"And, the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," contains just one service for the Node.js app."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'app:\n  image: quick-start-nodejs-elastic-apm\n  hostname: app\n  build: .\n  ports:\n    - "8080:8080"\n  depends_on:\n    apm-server:\n      condition: service_started\n')),(0,r.kt)("h2",{id:"tracetest"},"Tracetest"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," contains 6 services that configure Tracetest and Elastic."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Postgres")," - Postgres is a prerequisite for Tracetest to work. It stores trace data when running the trace-based tests."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://opentelemetry.io/docs/collector/"},(0,r.kt)("strong",{parentName:"a"},"OpenTelemetry Collector"))," - A vendor-agnostic implementation of how to receive, process and export telemetry data."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.elastic.co/elasticsearch/"},(0,r.kt)("strong",{parentName:"a"},"Elasticsearch"))," - Data store and search engine. (Also contains a ",(0,r.kt)("inlineCode",{parentName:"li"},"setup")," service to configure Elasticsearch)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.elastic.co/observability/application-performance-monitoring"},(0,r.kt)("strong",{parentName:"a"},"Elastic APM"))," - Elastic application performance monitoring and traces."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.elastic.co/kibana/"},(0,r.kt)("strong",{parentName:"a"},"Kibana"))," - Kibana is a free and open user interface that lets you visualize your Elasticsearch data and navigate the Elastic Stack."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://tracetest.io/"},(0,r.kt)("strong",{parentName:"a"},"Tracetest"))," - Trace-based testing that generates end-to-end tests automatically from traces.")),(0,r.kt)("p",null,"They will start in this order:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Postgres & Setup"),(0,r.kt)("li",{parentName:"ol"},"Elasticsearch"),(0,r.kt)("li",{parentName:"ol"},"Kibana"),(0,r.kt)("li",{parentName:"ol"},"Elastic APM Server"),(0,r.kt)("li",{parentName:"ol"},"OpenTelemetry Collector"),(0,r.kt)("li",{parentName:"ol"},"Tracetest")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/blob/main/examples/tracetest-elasticapm-with-elastic-agent/docker-compose.yaml"},"View the entire ",(0,r.kt)("inlineCode",{parentName:"a"},"docker-compose.yaml")," file here"),"."),(0,r.kt)("p",null,"Tracetest depends on Postgres and the OpenTelemetry Collector. The OpenTelemetry Collector depends on the Elastic APM Server that then depends on Elasticsearch and Kibana."),(0,r.kt)("p",null,"Both Tracetest and the OpenTelemetry Collector require config files to be loaded via a volume."),(0,r.kt)("p",null,"Elasticsearch, Kibana and Elastic APM use a ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file to load their config."),(0,r.kt)("h2",{id:"steps-to-start-the-environment"},"Steps to Start the Environment"),(0,r.kt)("p",null,"To start the environment run this command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose up -d\n")),(0,r.kt)("h2",{id:"connecting-tracetest-to-elastic-apm"},"Connecting Tracetest to Elastic APM"),(0,r.kt)("p",null,"But how does Tracetest fetch traces?"),(0,r.kt)("p",null,"Tracetest connects to Elastic APM to fetch trace data."),(0,r.kt)("p",null,"In the Web UI, open settings, and select Elastic APM."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1674566041/Blogposts/Docs/screely-1674566018046_ci0st9.png",alt:null})),(0,r.kt)("p",null,"Or, if you prefer using the CLI, you can use this file config."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\ntype: DataStore\nspec:\n  name: elasticapm\n  type: elasticapm\n  default: true\n  elasticapm:\n    addresses:\n      - https://es01:9200\n    username: elastic\n    password: changeme\n    index: traces-apm-default\n    insecureSkipVerify: true\n")),(0,r.kt)("p",null,"Proceed to run this command in the terminal and specify the file above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tracetest apply datastore -f my/data-store/file/location.yaml\n")),(0,r.kt)("h3",{id:"step-by-step-guide"},"Step-by-step Guide"),(0,r.kt)("p",null,"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:11633/")," to configure the connection to Elasticsearch:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In Settings, configure Elastic APM as the Data Store."),(0,r.kt)("li",{parentName:"ol"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"traces-apm-default")," as the Index name."),(0,r.kt)("li",{parentName:"ol"},"Add the Address and set it to ",(0,r.kt)("inlineCode",{parentName:"li"},"https://es01:9200"),"."),(0,r.kt)("li",{parentName:"ol"},"Set the Username to ",(0,r.kt)("inlineCode",{parentName:"li"},"elastic")," and password to ",(0,r.kt)("inlineCode",{parentName:"li"},"changeme"),"."),(0,r.kt)("li",{parentName:"ol"},'You will need to download the CA certificate from the Docker image and upload it to the config under "Upload CA file".',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The command to download the ",(0,r.kt)("inlineCode",{parentName:"li"},"ca.crt")," file is:\n",(0,r.kt)("inlineCode",{parentName:"li"},"docker cp tracetest-elasticapm-with-elastic-agent-es01-1:/usr/share/elasticsearch/config/certs/ca/ca.crt .")),(0,r.kt)("li",{parentName:"ul"},"Alternatively, you can skip CA certificate validation by setting the ",(0,r.kt)("inlineCode",{parentName:"li"},"Enable TLS but don't verify the certificate")," option."))),(0,r.kt)("li",{parentName:"ol"},"Test the connection and Save it, if all is successful.")),(0,r.kt)("p",null,"Create a new test:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},'Use the "HTTP Request" option. Hit Next.'),(0,r.kt)("li",{parentName:"ol"},"Name your test and add a description. Hit Next."),(0,r.kt)("li",{parentName:"ol"},"Configure the GET URL to be ",(0,r.kt)("inlineCode",{parentName:"li"},"http://app:8080")," since the tests will be running in docker compose network. Hit Create."),(0,r.kt)("li",{parentName:"ol"},"Running the test should succeed.")),(0,r.kt)("h2",{id:"open-kibana"},"Open Kibana"),(0,r.kt)("p",null,"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"https://localhost:5601")," and login using ",(0,r.kt)("inlineCode",{parentName:"p"},"elastic:changeme")," credentials. The credentials can be changed in the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file. Navigate to APM (upper lefthand corner menu) -> Services and you should see the ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest")," service with the rest of the details."),(0,r.kt)("h2",{id:"steps-to-stop-the-environment"},"Steps to Stop the Environment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose down -v\n\n# Remove the built app docker image\ndocker rmi quick-start-nodejs:latest\n")),(0,r.kt)("h2",{id:"learn-more"},"Learn More"),(0,r.kt)("p",null,"Feel free to check out our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples"},"examples in GitHub")," and join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/8MtcMrQNbX"},"Discord Community")," for more info!"))}d.isMDXComponent=!0}}]);