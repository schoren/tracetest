"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[8823],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(o,".").concat(m)]||u[m]||d[m]||s;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<s;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},27175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const s={},l="Tekton Cloud-native Pipeline",i={unversionedId:"ci-cd-automation/tekton-pipeline",id:"ci-cd-automation/tekton-pipeline",title:"Tekton Cloud-native Pipeline",description:"Check out the source code on GitHub here.",source:"@site/docs/ci-cd-automation/tekton-pipeline.md",sourceDirName:"ci-cd-automation",slug:"/ci-cd-automation/tekton-pipeline",permalink:"/ci-cd-automation/tekton-pipeline",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/ci-cd-automation/tekton-pipeline.md",tags:[],version:"current",frontMatter:{},sidebar:"examplesTutorialsSidebar",previous:{title:"Testkube Kubernetes-native Test Runner Pipeline",permalink:"/ci-cd-automation/testkube-pipeline"},next:{title:"Tools and Integrations",permalink:"/tools-and-integrations/overview"}},o={},p=[{value:"Running Event-driven Trace-based Tests",id:"running-event-driven-trace-based-tests",level:2},{value:"Why do we want to run Tracetest with Tekton?",id:"why-do-we-want-to-run-tracetest-with-tekton",level:2},{value:"Infrastructure Overview",id:"infrastructure-overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"1. Install Tekton Pipelines and Triggers",id:"1-install-tekton-pipelines-and-triggers",level:2},{value:"2. Install Tracetest CLI",id:"2-install-tracetest-cli",level:2},{value:"3. Install Tracetest in Your Kubernetes Cluster",id:"3-install-tracetest-in-your-kubernetes-cluster",level:2},{value:"4. Create a Test in Tracetest",id:"4-create-a-test-in-tracetest",level:2},{value:"5. Create a Task in Tekton",id:"5-create-a-task-in-tekton",level:2},{value:"6. Run the Tracetest Trace-based Test in Tekton with a TaskRun",id:"6-run-the-tracetest-trace-based-test-in-tekton-with-a-taskrun",level:2},{value:"7. Trigger Trace-based Tests with an EventListener",id:"7-trigger-trace-based-tests-with-an-eventlistener",level:2},{value:"Create a TriggerTemplate and TriggerBinding",id:"create-a-triggertemplate-and-triggerbinding",level:3},{value:"Create an EventListener",id:"create-an-eventlistener",level:3},{value:"Next Steps",id:"next-steps",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tekton-cloud-native-pipeline"},"Tekton Cloud-native Pipeline"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples/quick-start-tekton"},"Check out the source code on GitHub here."))),(0,r.kt)("h2",{id:"running-event-driven-trace-based-tests"},"Running Event-driven Trace-based Tests"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://tekton.dev/"},"Tekton")," is a powerful and flexible open-source framework for creating CI/CD systems, allowing developers to build, test, and deploy across cloud providers and on-premise systems."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://tracetest.io/"},"Tracetest")," is a testing tool based on ",(0,r.kt)("a",{parentName:"p",href:"https://opentelemetry.io/"},"OpenTelemetry")," that allows you to test your distributed application. It allows you to use data from distributed traces generated by OpenTelemetry to validate and assert if your application has the desired behavior defined by your test definitions."),(0,r.kt)("h2",{id:"why-do-we-want-to-run-tracetest-with-tekton"},"Why do we want to run Tracetest with Tekton?"),(0,r.kt)("p",null,"Tracetest leverages existing OpenTelemetry instrumentation to run assertions against every part of an HTTP transaction."),(0,r.kt)("p",null,"By running Tracetest with Tekton you can now add trace-based testing to the native CI/CD pipeline in your Kubernetes cluster. It allows you to run scheduled test runs and synthetic tests. All while following the trace-based testing principle and enabling full in-depth assertions against trace data, not just the response."),(0,r.kt)("h2",{id:"infrastructure-overview"},"Infrastructure Overview"),(0,r.kt)("p",null,"The following is high level sequence diagram on how Tekton and Tracetest interact with the different pieces of the system:"),(0,r.kt)("mermaid",{value:"sequenceDiagram\n    Tekton CLI->>+Tekton CRDs: Configure Tekton CRDs\n    Tekton CRDs->>+Tracetest Server: Trigger test run\n    Tracetest Server->>+Instrumented Service: Trigger request\n    Instrumented Service--\x3e>-Tracetest Server: Get response\n    Instrumented Service->>+Data Store: Send telemetry data\n    Tracetest Server->>+Data Store: Fetch trace\n    Data Store--\x3e>-Tracetest Server: Get trace\n    Tracetest Server->>+Tracetest Server: Run assertions\n    Tekton CRDs--\x3e>-Tekton CLI: Send details"}),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Make sure you have these three things installed before starting."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"A running Kubernetes cluster (either locally or in the cloud)."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"Kubectl")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://helm.sh/docs/intro/install/"},"Helm")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://tekton.dev/docs/cli/"},"Tekton CLI"))),(0,r.kt)("h2",{id:"quickstart"},"Quickstart"),(0,r.kt)("p",null,"Follow these steps to get started."),(0,r.kt)("h2",{id:"1-install-tekton-pipelines-and-triggers"},"1. Install Tekton Pipelines and Triggers"),(0,r.kt)("p",null,"Install Tekton Pipelines by following ",(0,r.kt)("a",{parentName:"p",href:"https://tekton.dev/docs/getting-started/tasks/#install-tekton-pipelines"},"these instructions for Pipelines"),", and ",(0,r.kt)("a",{parentName:"p",href:"https://tekton.dev/docs/getting-started/triggers/#install-tekton-triggers"},"there instructions for Triggers"),". Or, run the command below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml\n\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml\n\nkubectl apply --filename \\\nhttps://storage.googleapis.com/tekton-releases/triggers/latest/interceptors.yaml\n")),(0,r.kt)("h2",{id:"2-install-tracetest-cli"},"2. Install Tracetest CLI"),(0,r.kt)("p",null,"Install Tracetest CLI by following ",(0,r.kt)("a",{parentName:"p",href:"https://docs.tracetest.io/getting-started/installation"},"these instructions")," for your OS."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# MacOS example\nbrew install kubeshop/tracetest/tracetest\n")),(0,r.kt)("h2",{id:"3-install-tracetest-in-your-kubernetes-cluster"},"3. Install Tracetest in Your Kubernetes Cluster"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tracetest server install\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output"',title:'"Expected','output"':!0},"How do you want to run TraceTest? [type to search]:\n  Using Docker Compose\n> Using Kubernetes\n")),(0,r.kt)("p",null,"Select ",(0,r.kt)("inlineCode",{parentName:"p"},"Using Kubernetes"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output"',title:'"Expected','output"':!0},"Do you have OpenTelemetry based tracing already set up, or would you like us to install a demo tracing environment and app? [type to search]:\n  I have a tracing environment already. Just install Tracetest\n> Just learning tracing! Install Tracetest, OpenTelemetry Collector and the sample app.\n")),(0,r.kt)("p",null,"Select ",(0,r.kt)("inlineCode",{parentName:"p"},"Just learning tracing! Install Tracetest, OpenTelemetry Collector and the sample app."),"."),(0,r.kt)("p",null,"Confirm that Tracetest is running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get all -n tracetest\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output"',title:'"Expected','output"':!0},"NAME                                  READY   STATUS    RESTARTS        AGE\npod/otel-collector-7f4d87489f-vp6zn   1/1     Running   0               5m41s\npod/tracetest-78b9c84c57-t4prx        1/1     Running   3 (4m15s ago)   5m29s\npod/tracetest-postgresql-0            1/1     Running   0               5m42s\n\nNAME                              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)               AGE\nservice/otel-collector            ClusterIP   10.96.173.226   <none>        4317/TCP              5m46s\nservice/tracetest                 ClusterIP   10.96.248.146   <none>        11633/TCP,4317/TCP   5m42s\nservice/tracetest-postgresql      ClusterIP   10.96.155.147   <none>        5432/TCP              5m42s\nservice/tracetest-postgresql-hl   ClusterIP   None            <none>        5432/TCP              5m42s\n\nNAME                             READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/otel-collector   1/1     1            1           5m46s\ndeployment.apps/tracetest        1/1     1            1           5m42s\n\nNAME                                        DESIRED   CURRENT   READY   AGE\nreplicaset.apps/otel-collector-7f4d87489f   1         1         1       5m46s\nreplicaset.apps/tracetest-78b9c84c57        1         1         1       5m42s\n\nNAME                                    READY   AGE\nstatefulset.apps/tracetest-postgresql   1/1     5m42s\n")),(0,r.kt)("p",null,"By default, Tracetest is installed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest")," namespace."),(0,r.kt)("p",null,"To explore the Tracetest Web UI, run the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl --kubeconfig <path-to-your-home>/.kube/config --context <your-cluster-context> --namespace tracetest port-forward svc/tracetest 11633\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1679064296/Blogposts/Docs/screely-1679064291876_jxlhmn.png",alt:"Tracetest Web UI"})),(0,r.kt)("h2",{id:"4-create-a-test-in-tracetest"},"4. Create a Test in Tracetest"),(0,r.kt)("p",null,"Start by clicking ",(0,r.kt)("inlineCode",{parentName:"p"},"Create")," > ",(0,r.kt)("inlineCode",{parentName:"p"},"Create New Test")," > ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP Request")," > ",(0,r.kt)("inlineCode",{parentName:"p"},"Next")," > ",(0,r.kt)("inlineCode",{parentName:"p"},"Choose Example")," (dropdown) > ",(0,r.kt)("inlineCode",{parentName:"p"},"Pokeshop - List")," (generates a sample test from the Tracetest demo) > ",(0,r.kt)("inlineCode",{parentName:"p"},"Next")," > ",(0,r.kt)("inlineCode",{parentName:"p"},"URL")," is prefilled with ",(0,r.kt)("inlineCode",{parentName:"p"},"http://demo-pokemon-api.demo/pokemon?take=20&skip=0")," > ",(0,r.kt)("inlineCode",{parentName:"p"},"Create & Run"),"."),(0,r.kt)("p",null,"This will trigger the test and display a distributed trace in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Trace")," tab to run assertions against."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1679064990/Blogposts/Docs/screely-1679064984975_s0psbr.png",alt:"Tracetest distributed trace test run view"})),(0,r.kt)("p",null,"Proceed to add a test spec to assert all database queries return within 500 ms. Click the ",(0,r.kt)("inlineCode",{parentName:"p"},"Test")," tab and proceed to click the ",(0,r.kt)("inlineCode",{parentName:"p"},"Add Test Spec")," button."),(0,r.kt)("p",null,"In the span selector make sure to add this selector:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},'span[tracetest.span.type="database"]\n')),(0,r.kt)("p",null,"In the assertion field add:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"attr:tracetest.span.duration < 500ms\n")),(0,r.kt)("p",null,"Save the test spec and publish the test."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1679071121/Blogposts/Docs/screely-1679071115690_hqhzh2.png",alt:"Assertion for database queries"})),(0,r.kt)("p",null,"The database spans that are returning in more than 500ms are labeled in red."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1679071183/Blogposts/Docs/screely-1679071177655_cjqwlk.png",alt:"Assertions failing"})),(0,r.kt)("p",null,"This is an example of a trace-based test that asserts against every single part of an HTTP transaction, including all interactions with the database."),(0,r.kt)("p",null,"However, Tracetest cannot run this test as part of your CI/CD without integrating with another tool."),(0,r.kt)("p",null,"Let's introduce how Tekton makes it possible."),(0,r.kt)("h2",{id:"5-create-a-task-in-tekton"},"5. Create a Task in Tekton"),(0,r.kt)("p",null,"Click the \u2699\ufe0f button in the top right. Then click ",(0,r.kt)("inlineCode",{parentName:"p"},"Test Definition"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1679065450/Blogposts/Docs/screely-1679065444972_zzsila.png",alt:"test settings"})),(0,r.kt)("p",null,"This will open a YAML definition for the test run."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1679071430/Blogposts/Docs/screely-1679071422136_ygbo8q.png",alt:"tracetest test yaml file"})),(0,r.kt)("p",null,"Save this into a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"test-api.yaml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'type: Test\nspec:\n  id: RUkKQ_aVR\n  name: Pokeshop - List\n  description: Get a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      url: http://demo-pokemon-api.demo/pokemon?take=20&skip=0\n      method: GET\n      headers:\n      - key: Content-Type\n        value: application/json\n  specs:\n  - name: Database queries less than 500 ms\n    selector: span[tracetest.span.type="database"]\n    assertions:\n    - attr:tracetest.span.duration  <  500ms\n')),(0,r.kt)("p",null,"Create another YAML file, name it ",(0,r.kt)("inlineCode",{parentName:"p"},"install-and-run-tracetest.yaml"),".\nThis contains the Tekton ",(0,r.kt)("inlineCode",{parentName:"p"},"Task")," definition."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: install-and-run-tracetest\nspec:\n  steps:\n    - name: create-test-files\n      image: ubuntu\n      script: |\n        #!/usr/bin/env bash\n        cat <<EOF >/workspace/test-api.yaml\n        type: Test\n        spec:\n          id: RUkKQ_aVR\n          name: Pokeshop - List\n          description: Get a Pokemon\n          trigger:\n            type: http\n            httpRequest:\n              url: http://demo-pokemon-api.demo/pokemon?take=20&skip=0\n              method: GET\n              headers:\n              - key: Content-Type\n                value: application/json\n          specs:\n          - name: Database queries less than 500 ms\n            selector: span[tracetest.span.type="database"]\n            assertions:\n            - attr:tracetest.span.duration  <  500ms\n        EOF\n      volumeMounts:\n      - name: custom\n        mountPath: /workspace\n    - name: install-and-run-tracetest\n      image: kubeshop/tracetest:v0.11.9 # The official Tracetest image comes with the Tracetest CLI installed\n      script: |\n        # Configure and Run Tracetest CLI\n        tracetest configure -g --endpoint http://tracetest.tracetest.svc.cluster.local:11633/\n        tracetest run test -f /workspace/test-api.yaml\n      volumeMounts:\n      - name: custom\n        mountPath: /workspace\n  volumes:\n  - name: custom\n    emptyDir: {}\n')),(0,r.kt)("p",null,"Make sure to use the Tracetest service as the endpoint for your ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest configure")," command. This may vary depending on your installation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"http://tracetest.tracetest.svc.cluster.local:11633/\n")),(0,r.kt)("h2",{id:"6-run-the-tracetest-trace-based-test-in-tekton-with-a-taskrun"},"6. Run the Tracetest Trace-based Test in Tekton with a TaskRun"),(0,r.kt)("p",null,"Finally, to run the test, create a ",(0,r.kt)("inlineCode",{parentName:"p"},"TaskRun"),"."),(0,r.kt)("p",null,"Create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"install-and-run-tracetest-run-yaml"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: tekton.dev/v1beta1\nkind: TaskRun\nmetadata:\n  name: install-and-run-tracetest-run\nspec:\n  taskRef:\n    name: install-and-run-tracetest\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f ./install-and-run-tracetest-run-yaml\n")),(0,r.kt)("p",null,"Here's how to check the logs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs --selector=tekton.dev/taskRun=install-and-run-tracetest-run\n")),(0,r.kt)("p",null,"You can also trigger a Task with the Tekton CLI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tkn task start install-and-run-tracetest\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output"',title:'"Expected','output"':!0},"TaskRun started: install-and-run-tracetest-run-xmhfg\n\nIn order to track the TaskRun progress run:\ntkn taskrun logs install-and-run-tracetest-run-xmhfg -f -n default\n")),(0,r.kt)("p",null,"To preview which tasks failed or succeeded, use this command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tkn taskrun list\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output"',title:'"Expected','output"':!0},"NAME                                  STARTED          DURATION   STATUS\ninstall-and-run-tracetest-run         3 minutes ago    23s        Succeeded\ninstall-and-run-tracetest-run-nmptn   7 minutes ago    33s        Failed\ninstall-and-run-tracetest-run-bhf7v   20 minutes ago   23s        Succeeded\ninstall-and-run-tracetest-run-wm8bj   21 minutes ago   22s        Succeeded\ninstall-and-run-tracetest-run-dbrbt   23 minutes ago   24s        Failed\n")),(0,r.kt)("h2",{id:"7-trigger-trace-based-tests-with-an-eventlistener"},"7. Trigger Trace-based Tests with an EventListener"),(0,r.kt)("p",null,"By using Tektons's ",(0,r.kt)("a",{parentName:"p",href:"https://tekton.dev/docs/getting-started/triggers/"},"triggers"),", you can trigger tests via an ",(0,r.kt)("a",{parentName:"p",href:"https://tekton.dev/docs/getting-started/triggers/#create-an-eventlistener"},"eventlistener"),"."),(0,r.kt)("h3",{id:"create-a-triggertemplate-and-triggerbinding"},"Create a TriggerTemplate and TriggerBinding"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="install-and-run-tracetest-trigger-binding.yaml"',title:'"install-and-run-tracetest-trigger-binding.yaml"'},"apiVersion: triggers.tekton.dev/v1beta1\nkind: TriggerTemplate\nmetadata:\n  name: install-and-run-tracetest-template\nspec:\n  resourcetemplates:\n  - apiVersion: tekton.dev/v1beta1\n    kind: TaskRun\n    metadata:\n      generateName: install-and-run-tracetest-run-\n    spec:\n      taskRef:\n        name: install-and-run-tracetest\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="install-and-run-tracetest-trigger-template.yaml"',title:'"install-and-run-tracetest-trigger-template.yaml"'},"apiVersion: triggers.tekton.dev/v1beta1\nkind: TriggerBinding\nmetadata:\n  name: install-and-run-tracetest-binding\nspec:\n  params:\n  - name: run\n    value: $(body.run)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f install-and-run-tracetest-trigger-binding.yaml\nkubectl apply -f install-and-run-tracetest-trigger-template.yaml\n")),(0,r.kt)("h3",{id:"create-an-eventlistener"},"Create an EventListener"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="install-and-run-tracetest-listener.yaml"',title:'"install-and-run-tracetest-listener.yaml"'},"apiVersion: triggers.tekton.dev/v1beta1\nkind: EventListener\nmetadata:\n  name: install-and-run-tracetest-listener\nspec:\n  serviceAccountName: tekton-robot\n  triggers:\n    - name: install-and-run-tracetest-trigger \n      bindings:\n      - ref: install-and-run-tracetest-binding\n      template:\n        ref: install-and-run-tracetest-template\n")),(0,r.kt)("p",null,"The EventListener requires a service account to run. To create the service account for this example create a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"tekton-robot-rbac.yaml")," and add the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="tekton-robot-rbac.yaml"',title:'"tekton-robot-rbac.yaml"'},"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tekton-robot\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: triggers-example-eventlistener-binding\nsubjects:\n- kind: ServiceAccount\n  name: tekton-robot\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: tekton-triggers-eventlistener-roles\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: triggers-example-eventlistener-clusterbinding\nsubjects:\n- kind: ServiceAccount\n  name: tekton-robot\n  namespace: default\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: tekton-triggers-eventlistener-clusterroles\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f tekton-robot-rbac.yaml\nkubectl apply -f install-and-run-tracetest-listener.yaml\n")),(0,r.kt)("p",null,"Enable port forwarding."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl port-forward service/el-hello-listener 8080\n")),(0,r.kt)("p",null,"Hitting the port forwarded endpoint will trigger the task."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"curl -v \\\n   -H 'content-Type: application/json' \\\n   -d '{\"run\":true}' \\\n   http://localhost:8080\n")),(0,r.kt)("p",null,"Checking the taskruns will confirm this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tkn taskrun list\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output"',title:'"Expected','output"':!0},"NAME                                  STARTED          DURATION   STATUS\ninstall-and-run-tracetest-run-69zrz   4 seconds ago    ---        Running(Pending)\n")),(0,r.kt)("p",null,"Finally, check the logs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tkn taskrun logs -f install-and-run-tracetest-run-69zrz\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output"',title:'"Expected','output"':!0},"[install-and-run-tracetest] \u2714 Pokeshop - List (http://tracetest.tracetest.svc.cluster.local:11633/test/RUkKQ_aVR/run/5/test)\n[install-and-run-tracetest]     \u2714 Database queries less than 500 ms\n")),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"To explore more options that Tekton gives you, check out ",(0,r.kt)("a",{parentName:"p",href:"https://tekton.dev/docs/getting-started/"},"the docs")," to learn more!"))}d.isMDXComponent=!0}}]);