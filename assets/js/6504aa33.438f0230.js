"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[1941],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(n),d=i,m=p["".concat(c,".").concat(d)]||p[d]||f[d]||s;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:i,a[1]=o;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63719:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=n(87462),i=(n(67294),n(3905));const s={},a="Defining Test Suites as Text Files",o={unversionedId:"cli/creating-test-suites",id:"cli/creating-test-suites",title:"Defining Test Suites as Text Files",description:"This page showcases how to create and edit Test Suites with the CLI.",source:"@site/docs/cli/creating-test-suites.md",sourceDirName:"cli",slug:"/cli/creating-test-suites",permalink:"/cli/creating-test-suites",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/cli/creating-test-suites.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Undefined Variables",permalink:"/cli/undefined-variables"},next:{title:"Running Test Suites From the Command Line Interface (CLI)",permalink:"/cli/running-test-suites"}},c={},l=[],u={toc:l},p="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"defining-test-suites-as-text-files"},"Defining Test Suites as Text Files"),(0,i.kt)("p",null,"This page showcases how to create and edit Test Suites with the CLI."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"/concepts/test-suites"},"To read more about Test Suites check out Test Suites concepts page."))),(0,i.kt)("p",null,"Just like other structures of Tracetest, you can also manage your Test Suites using the CLI and definition files."),(0,i.kt)("p",null,"A definition file for a Test Suite looks like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"type: TestSuite\nspec:\n  name: Test purchase flow\n  description: Test a flow of purchasing an item\n  steps:\n    - ./tests/create-product.yaml\n    - ./tests/add-product-to-cart.yaml\n    - ./tests/complete-purchase.yaml\n    - testID # you can also reference tests by their ids instead of referencing the definition file\n")),(0,i.kt)("p",null,"In order to apply this Test Suite to your Tracetest instance, make sure to have your ",(0,i.kt)("a",{parentName:"p",href:"/cli/configuring-your-cli"},"CLI configured")," and run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"tracetest apply testsuite -f <testsuite.yaml>\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If the file contains the property ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.id"),", the operation will be considered a Test Suite update.")))}f.isMDXComponent=!0}}]);