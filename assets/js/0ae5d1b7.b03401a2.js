"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[4561],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return a?n.createElement(g,o(o({ref:t},c),{},{components:a})):n.createElement(g,o({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},62510:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const s={id:"open",title:"Opening Tracetest Core",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces. Learn how to get started with creating tests once you open Tracetest.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1689693872/docs/Blog_Thumbnail_28_ugy2yy.png"},o=void 0,i={unversionedId:"core/getting-started/open",id:"core/getting-started/open",title:"Opening Tracetest Core",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces. Learn how to get started with creating tests once you open Tracetest.",source:"@site/docs/core/getting-started/open.mdx",sourceDirName:"core/getting-started",slug:"/core/getting-started/open",permalink:"/core/getting-started/open",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/core/getting-started/open.mdx",tags:[],version:"current",frontMatter:{id:"open",title:"Opening Tracetest Core",description:"Tracetest allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces. Learn how to get started with creating tests once you open Tracetest.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1689693872/docs/Blog_Thumbnail_28_ugy2yy.png"},sidebar:"coreSidebar",previous:{title:"Installing Tracetest Core",permalink:"/core/getting-started/installation"},next:{title:"Configuration",permalink:"/core/configuration/overview"}},l={},p=[{value:"Creating Trace-based Tests",id:"creating-trace-based-tests",level:2},{value:"Creating Trace-based Tests Visually",id:"creating-trace-based-tests-visually",level:2},{value:"Create",id:"create",level:3},{value:"Trigger",id:"trigger",level:3},{value:"Trace",id:"trace",level:3},{value:"Test",id:"test",level:3},{value:"Automate",id:"automate",level:3},{value:"Creating Trace-based Tests Programatically",id:"creating-trace-based-tests-programatically",level:2},{value:"Create",id:"create-1",level:3},{value:"Trigger",id:"trigger-1",level:3},{value:"Output",id:"output",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This page showcases opening the Tracetest Web UI regardless if you used the Tracetest CLI, Docker, Kubernetes, or Helm to install Tracetest Server."),(0,r.kt)("p",null,"Once you've installed Tracetest, as explained in the ",(0,r.kt)("a",{parentName:"p",href:"/core/getting-started/installation"},"installation guide"),", you access the Tracetest Web UI on ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:11633"},(0,r.kt)("inlineCode",{parentName:"a"},"http://localhost:11633")),". Here's what will greet you after a fresh install."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688474565/docs/screely-1688474539641_kbhvvc.png",alt:"Landing page Tracetest"})),(0,r.kt)("p",null,"By following the ",(0,r.kt)("a",{parentName:"p",href:"/core/getting-started/installation"},"installation guide")," your Tracetest Core instance will have a ",(0,r.kt)("inlineCode",{parentName:"p"},"demo")," Pokeshop app installed that generates distributed traces when triggered."),(0,r.kt)("h2",{id:"creating-trace-based-tests"},"Creating Trace-based Tests"),(0,r.kt)("p",null,"You can create tests in two ways:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Visually, in the Web UI"),(0,r.kt)("li",{parentName:"ul"},"Programmatically, in YAML")),(0,r.kt)("h2",{id:"creating-trace-based-tests-visually"},"Creating Trace-based Tests Visually"),(0,r.kt)("p",null,"This guide will show how to create end-to-end and integration tests in less than 5 minutes via the Web UI."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"To view the in-depth guide on creating tests visually, ",(0,r.kt)("a",{parentName:"p",href:"/web-ui/creating-tests"},"check out this docs page"),".")),(0,r.kt)("h3",{id:"create"},"Create"),(0,r.kt)("p",null,"On the top right, click the ",(0,r.kt)("strong",{parentName:"p"},"Create")," button and select ",(0,r.kt)("strong",{parentName:"p"},"Create New Test")," in the drop down."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688475179/docs/screely-1688475174365_ckq3cn.png",alt:"Create a new test"})),(0,r.kt)("p",null,"Select an ",(0,r.kt)("strong",{parentName:"p"},"HTTP Request")," as the ",(0,r.kt)("strong",{parentName:"p"},"test trigger"),", and choose the ",(0,r.kt)("strong",{parentName:"p"},"Pokeshop - Import")," example."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688475514/docs/screely-1688475510090_r6hqmx.png",alt:"Select Pokeshop example"})),(0,r.kt)("p",null,"This will populate a sample API test against a POST endpoint in the Pokeshop app demo. Clicking ",(0,r.kt)("strong",{parentName:"p"},"Create & Run")," will save and trigger the test."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688475680/docs/screely-1688475676524_vvtxsu.png",alt:"API test against POST endpoint"})),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Running a test against ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost")," will resolve as ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," inside the Tracetest Core container. To run tests against apps running on your local machine, add them to the same network and use service name mapping instead. Example: Instead of running an app on ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:8080"),", add it to your Docker Compose file, connect it to the same network as your Tracetest service, and use ",(0,r.kt)("inlineCode",{parentName:"p"},"service-name:8080")," in the URL field when creating an app."),(0,r.kt)("p",{parentName:"admonition"},"You can reach services running on your local machine using:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Linux (docker version < 20.10.0): ",(0,r.kt)("inlineCode",{parentName:"li"},"172.17.0.1:8080")),(0,r.kt)("li",{parentName:"ul"},"MacOS (docker version >= 18.03) and Linux (docker version >= 20.10.0): ",(0,r.kt)("inlineCode",{parentName:"li"},"host.docker.internal:8080")))),(0,r.kt)("h3",{id:"trigger"},"Trigger"),(0,r.kt)("p",null,"You'll be redirected to the test page where you can see four tabs and depending on which one you select you'll get access to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test trigger and results"),(0,r.kt)("li",{parentName:"ul"},"The entire distributed trace and trace analysis"),(0,r.kt)("li",{parentName:"ul"},"Test specification and assertions"),(0,r.kt)("li",{parentName:"ul"},"How to automate the test")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"To view the in-depth guide on test results, ",(0,r.kt)("a",{parentName:"p",href:"../../web-ui/test-results"},"check out this docs page"))),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Trigger")," tab shows how the test was triggered and what the API response was."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688476389/docs/screely-1688476384678_edcsgx.png",alt:"test result"})),(0,r.kt)("h3",{id:"trace"},"Trace"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Trace")," tab shows the entire distributed trace for debugging and a trace analysis score."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688476460/docs/screely-1688476455986_q24aa2.png",alt:"distributed trace and trace analysis score"})),(0,r.kt)("h3",{id:"test"},"Test"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Test")," tab shows span attributes. Here you add test specs and assertions on attribute values. You also get a test snippets out-of-the-box for common test cases."),(0,r.kt)("p",null,"In the sample below, you see how to assert that all database spans return in less than ",(0,r.kt)("inlineCode",{parentName:"p"},"100ms"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688476657/docs/screely-1688476653521_omxe4r.png",alt:"test specs"})),(0,r.kt)("h3",{id:"automate"},"Automate"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Automate")," tab shows how to automate the test run with the Tracetest CLI and other automation options."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1688564019/docs/screely-1688564011617_n5pizv.png",alt:"automate"})),(0,r.kt)("p",null,"From here you can download a YAML file test definition and run it with the CLI."),(0,r.kt)("h2",{id:"creating-trace-based-tests-programatically"},"Creating Trace-based Tests Programatically"),(0,r.kt)("p",null,"The test definition will contain:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"Trigger")," for the test in the ",(0,r.kt)("inlineCode",{parentName:"li"},"trigger")," section."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"Test Specifications")," in the",(0,r.kt)("inlineCode",{parentName:"li"},"specs")," section.")),(0,r.kt)("p",null,"You can either download the YAML file test definition, or write one from scratch."),(0,r.kt)("h3",{id:"create-1"},"Create"),(0,r.kt)("p",null,"Using the sample from above, create the Trace-based Test programatically."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="pokeshop_import.yaml"',title:'"pokeshop_import.yaml"'},"type: Test\nspec:\n  id: Yg9sN-94g\n  name: Pokeshop - Import\n  description: Import a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      url: http://demo-api:8081/pokemon/import\n      method: POST\n      headers:\n      - key: Content-Type\n        value: application/json\n      body: '{\"id\":52}'\n  specs:\n  - name: 'All Database Spans: Processing time is less than 100ms'\n    selector: span[tracetest.span.type=\"database\"]\n    assertions:\n    - attr:tracetest.span.duration < 100ms\n")),(0,r.kt)("h3",{id:"trigger-1"},"Trigger"),(0,r.kt)("p",null,"Using the CLI, trigger a test run."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Terminal"',title:'"Terminal"'},"tracetest run test -f pokeshop_import.yaml -o pretty\n")),(0,r.kt)("h3",{id:"output"},"Output"),(0,r.kt)("p",null,"The test run will complete and show a result."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Output"',title:'"Output"'},"\u2714 Pokeshop - Import (http://localhost:11633/test/Yg9sN-94g/run/3/test)\n    \u2714 All Database Spans: Processing time is less than 100ms\n")),(0,r.kt)("p",null,"The provided link in the test output will open the test run in the Tracetest Web UI."))}u.isMDXComponent=!0}}]);