"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[7647],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,f=c["".concat(o,".").concat(d)]||c[d]||m[d]||i;return t?a.createElement(f,l(l({ref:n},u),{},{components:t})):a.createElement(f,l({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[c]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},16084:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const i={},l="span-naming",s={unversionedId:"analyzer/rules/span-naming",id:"analyzer/rules/span-naming",title:"span-naming",description:"Enforce span names that identify a\xa0class of Spans, rather than individual Span instances.",source:"@site/docs/analyzer/rules/span-naming.md",sourceDirName:"analyzer/rules",slug:"/analyzer/rules/span-naming",permalink:"/analyzer/rules/span-naming",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/analyzer/rules/span-naming.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OTel Semantic Conventions",permalink:"/analyzer/plugins/otel-semantic-conventions"},next:{title:"attribute-naming",permalink:"/analyzer/rules/attribute-naming"}},o={},p=[{value:"Rule Details",id:"rule-details",level:2},{value:"HTTP spans:",id:"http-spans",level:3},{value:"Database spans:",id:"database-spans",level:3},{value:"RPC spans:",id:"rpc-spans",level:3},{value:"Messaging spans:",id:"messaging-spans",level:3},{value:"Options",id:"options",level:2},{value:"When Not To Use It",id:"when-not-to-use-it",level:2}],u={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"span-naming"},"span-naming"),(0,r.kt)("p",null,"Enforce span names that identify a\xa0class of Spans, rather than individual Span instances."),(0,r.kt)("h2",{id:"rule-details"},"Rule Details"),(0,r.kt)("p",null,"The\xa0span name\xa0concisely identifies the work represented by the Span, for example, an RPC method name, a function name, or the name of a subtask or stage within a larger computation. The span name SHOULD be the most general string that identifies a\xa0class of Spans, rather than individual Span instances while still being human-readable."),(0,r.kt)("p",null,"The following OTel semantic conventions for span names are defined:"),(0,r.kt)("h3",{id:"http-spans"},"HTTP spans:"),(0,r.kt)("p",null,"If span kind is ",(0,r.kt)("inlineCode",{parentName:"p"},'"server"'),", the name should follow this format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{http.method} {http.route}\n")),(0,r.kt)("p",null,"If span kind is ",(0,r.kt)("inlineCode",{parentName:"p"},'"client"'),", the name should follow this format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{http.method}\n")),(0,r.kt)("h3",{id:"database-spans"},"Database spans:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{db.operation} {db.name}.{db.sql.table}\n")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"db.sql.table")," is not available, the name should follow this format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{db.operation} {db.name}\n")),(0,r.kt)("h3",{id:"rpc-spans"},"RPC spans:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{package}.{service}/{method}\n")),(0,r.kt)("h3",{id:"messaging-spans"},"Messaging spans:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{destination name} {operation name}\n")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("p",null,"This rule has the following options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"error"')," requires span names to follow the OTel semantic convention"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"disabled"')," disables the span name verification"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"warning"')," verifies span names to follow the OTel semantic convention but does not impact the analyzer score")),(0,r.kt)("h2",{id:"when-not-to-use-it"},"When Not To Use It"),(0,r.kt)("p",null,"If you don\u2019t want to enforce OTel span names, don\u2019t enable this rule."))}m.isMDXComponent=!0}}]);