"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[134],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),d=i,h=p["".concat(l,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},18065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const a={},o="CI/CD Automation",c={unversionedId:"ci-cd-automation/overview",id:"ci-cd-automation/overview",title:"CI/CD Automation",description:"This section contains a general overview of running Tracetest in CI/CD pipelines.",source:"@site/docs/ci-cd-automation/overview.md",sourceDirName:"ci-cd-automation",slug:"/ci-cd-automation/overview",permalink:"/ci-cd-automation/overview",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/ci-cd-automation/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"examplesTutorialsSidebar",previous:{title:"Running Tracetest with Azure App Insights (OpenTelemetry Collector & Pokeshop API)",permalink:"/examples-tutorials/recipes/running-tracetest-with-azure-app-insights-pokeshop"},next:{title:"GitHub Actions Pipeline",permalink:"/ci-cd-automation/github-actions-pipeline"}},l={},s=[{value:"Running Tracetest CLI from Docker",id:"running-tracetest-cli-from-docker",level:2}],u={toc:s},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"cicd-automation"},"CI/CD Automation"),(0,i.kt)("p",null,"This section contains a general overview of running Tracetest in CI/CD pipelines."),(0,i.kt)("p",null,"You can find guides for:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/ci-cd-automation/github-actions-pipeline"},"GitHub Actions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/ci-cd-automation/testkube-pipeline"},"Testkube")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/ci-cd-automation/tekton-pipeline"},"Tekton"))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"If you want to see more examples with other CI/CD tools, let us know by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/issues/new/choose"},"opening an issue in GitHub"),"!")),(0,i.kt)("p",null,"Tracetest is designed to work with all CI/CD platforms and automation tools. To enable Tracetest to run in CI/CD environments, make sure to ",(0,i.kt)("a",{parentName:"p",href:"/getting-started/installation"},"install the Tracetest CLI")," and configure it to access your ",(0,i.kt)("a",{parentName:"p",href:"/core/configuration/server"},"Tracetest server"),"."),(0,i.kt)("p",null,"To read more about integrating Tracetest with CI/CD tools, check out tutorials in our blog:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubeshop.io/blog/integrating-tracetest-with-github-actions-in-a-ci-pipeline"},"Integrating Tracetest with GitHub Actions in a CI pipeline")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://tracetest.io/blog/50-faster-ci-pipelines-with-github-actions"},"50% Faster CI Pipelines with GitHub Actions"))),(0,i.kt)("h2",{id:"running-tracetest-cli-from-docker"},"Running Tracetest CLI from Docker"),(0,i.kt)("p",null,"Many integrations with CI/CD tools can be accomplished by running the ",(0,i.kt)("a",{parentName:"p",href:"/cli/configuring-your-cli"},"Tracetest CLI")," to execute a test against a remote Tracetest server. If you do not want to install the Tracetest CLI in your environment, you can choose to directly execute it from a Docker image."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How to Use"),":"),(0,i.kt)("p",null,"Use the command below, substituting the following placeholders:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"your-tracetest-server-url")," - the URL to the running Tracetest server you wish to execute the test on. Example: ",(0,i.kt)("inlineCode",{parentName:"li"},"http://localhost:11633/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"file-path")," - The path to the saved Tracetest test. Example: ",(0,i.kt)("inlineCode",{parentName:"li"},"./mytest.yaml"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"wordWrap=true",wordWrap:"true"},"docker run --rm -it -v$(pwd):$(pwd) -w $(pwd) --network host --entrypoint tracetest kubeshop/tracetest:latest -s <your-tracetest-server-url> run test --file <file-path>\n")))}m.isMDXComponent=!0}}]);